// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        (unknown)
// source: internal/domain/module/api/v1/model.proto

package module_v1

import (
	_ "github.com/amsokol/protoc-gen-gotag/tagger"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ImageEncoding int32

const (
	ImageEncoding_None   ImageEncoding = 0
	ImageEncoding_B64PNG ImageEncoding = 1
	ImageEncoding_B64JPG ImageEncoding = 2
	ImageEncoding_B64SVG ImageEncoding = 3
)

// Enum value maps for ImageEncoding.
var (
	ImageEncoding_name = map[int32]string{
		0: "None",
		1: "B64PNG",
		2: "B64JPG",
		3: "B64SVG",
	}
	ImageEncoding_value = map[string]int32{
		"None":   0,
		"B64PNG": 1,
		"B64JPG": 2,
		"B64SVG": 3,
	}
)

func (x ImageEncoding) Enum() *ImageEncoding {
	p := new(ImageEncoding)
	*p = x
	return p
}

func (x ImageEncoding) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ImageEncoding) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_domain_module_api_v1_model_proto_enumTypes[0].Descriptor()
}

func (ImageEncoding) Type() protoreflect.EnumType {
	return &file_internal_domain_module_api_v1_model_proto_enumTypes[0]
}

func (x ImageEncoding) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ImageEncoding.Descriptor instead.
func (ImageEncoding) EnumDescriptor() ([]byte, []int) {
	return file_internal_domain_module_api_v1_model_proto_rawDescGZIP(), []int{0}
}

type Image struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Encoding ImageEncoding `protobuf:"varint,1,opt,name=encoding,proto3,enum=module_v1.ImageEncoding" json:"encoding,omitempty" bson:"encoding"`
	Data     string        `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty" bson:"data"`
}

func (x *Image) Reset() {
	*x = Image{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_domain_module_api_v1_model_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_internal_domain_module_api_v1_model_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_internal_domain_module_api_v1_model_proto_rawDescGZIP(), []int{0}
}

func (x *Image) GetEncoding() ImageEncoding {
	if x != nil {
		return x.Encoding
	}
	return ImageEncoding_None
}

func (x *Image) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type Module struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Package     string   `protobuf:"bytes,1,opt,name=package,proto3" json:"package,omitempty" bson:"package" yaml:"package"`
	Version     string   `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty" bson:"version"`
	Repo        string   `protobuf:"bytes,3,opt,name=repo,proto3" json:"repo,omitempty" bson:"repo"`
	Label       string   `protobuf:"bytes,6,opt,name=label,proto3" json:"label,omitempty" bson:"label" yaml:"label"`
	Description string   `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty" bson:"description" yaml:"description"`
	Tags        []string `protobuf:"bytes,9,rep,name=tags,proto3" json:"tags,omitempty" bson:"tags,omitempty" yaml:"tags"`
	Readme      string   `protobuf:"bytes,4,opt,name=readme,proto3" json:"readme,omitempty" bson:"readme,omitempty"`
	Licence     string   `protobuf:"bytes,5,opt,name=licence,proto3" json:"licence,omitempty" bson:"licence,omitempty"`
	Icon        *Image   `protobuf:"bytes,8,opt,name=icon,proto3" json:"icon,omitempty" bson:"icon,omitempty"`
}

func (x *Module) Reset() {
	*x = Module{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_domain_module_api_v1_model_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Module) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Module) ProtoMessage() {}

func (x *Module) ProtoReflect() protoreflect.Message {
	mi := &file_internal_domain_module_api_v1_model_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Module.ProtoReflect.Descriptor instead.
func (*Module) Descriptor() ([]byte, []int) {
	return file_internal_domain_module_api_v1_model_proto_rawDescGZIP(), []int{1}
}

func (x *Module) GetPackage() string {
	if x != nil {
		return x.Package
	}
	return ""
}

func (x *Module) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Module) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

func (x *Module) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Module) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Module) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Module) GetReadme() string {
	if x != nil {
		return x.Readme
	}
	return ""
}

func (x *Module) GetLicence() string {
	if x != nil {
		return x.Licence
	}
	return ""
}

func (x *Module) GetIcon() *Image {
	if x != nil {
		return x.Icon
	}
	return nil
}

type SparkInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MimeTypes []string `protobuf:"bytes,1,rep,name=mime_types,json=mimeTypes,proto3" json:"mime_types,omitempty" bson:"mime_types" yaml:"mime_types"`
	Schema    string   `protobuf:"bytes,2,opt,name=schema,proto3" json:"schema,omitempty" bson:"schema"`
	Required  bool     `protobuf:"varint,3,opt,name=required,proto3" json:"required,omitempty" bson:"required,omitempty"`
	Type      string   `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty" bson:"type"`
}

func (x *SparkInput) Reset() {
	*x = SparkInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_domain_module_api_v1_model_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SparkInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SparkInput) ProtoMessage() {}

func (x *SparkInput) ProtoReflect() protoreflect.Message {
	mi := &file_internal_domain_module_api_v1_model_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SparkInput.ProtoReflect.Descriptor instead.
func (*SparkInput) Descriptor() ([]byte, []int) {
	return file_internal_domain_module_api_v1_model_proto_rawDescGZIP(), []int{2}
}

func (x *SparkInput) GetMimeTypes() []string {
	if x != nil {
		return x.MimeTypes
	}
	return nil
}

func (x *SparkInput) GetSchema() string {
	if x != nil {
		return x.Schema
	}
	return ""
}

func (x *SparkInput) GetRequired() bool {
	if x != nil {
		return x.Required
	}
	return false
}

func (x *SparkInput) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type SparkOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MimeType string `protobuf:"bytes,1,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty" bson:"mime_type" yaml:"mime_type"`
	Schema   string `protobuf:"bytes,2,opt,name=schema,proto3" json:"schema,omitempty" bson:"schema,omitempty"`
}

func (x *SparkOutput) Reset() {
	*x = SparkOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_domain_module_api_v1_model_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SparkOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SparkOutput) ProtoMessage() {}

func (x *SparkOutput) ProtoReflect() protoreflect.Message {
	mi := &file_internal_domain_module_api_v1_model_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SparkOutput.ProtoReflect.Descriptor instead.
func (*SparkOutput) Descriptor() ([]byte, []int) {
	return file_internal_domain_module_api_v1_model_proto_rawDescGZIP(), []int{3}
}

func (x *SparkOutput) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *SparkOutput) GetSchema() string {
	if x != nil {
		return x.Schema
	}
	return ""
}

type Spark struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name             string                  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" bson:"name"`
	Label            string                  `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty" bson:"label" yaml:"label"`
	Description      string                  `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty" bson:"description" yaml:"description"`
	Config           *structpb.Struct        `protobuf:"bytes,4,opt,name=config,proto3" json:"config,omitempty" bson:"config,omitempty" yaml:"config"`
	ExtensibleInputs bool                    `protobuf:"varint,5,opt,name=extensible_inputs,json=extensibleInputs,proto3" json:"extensible_inputs,omitempty" bson:"extensible_inputs,omitempty" yaml:"extensible_inputs"`
	Inputs           map[string]*SparkInput  `protobuf:"bytes,6,rep,name=inputs,proto3" json:"inputs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"inputs,omitempty" yaml:"inputs"`
	Outputs          map[string]*SparkOutput `protobuf:"bytes,7,rep,name=outputs,proto3" json:"outputs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3" bson:"outputs,omitempty" yaml:"outputs"`
	Readme           string                  `protobuf:"bytes,8,opt,name=readme,proto3" json:"readme,omitempty" bson:"readme,omitempty"`
	Icon             *Image                  `protobuf:"bytes,9,opt,name=icon,proto3" json:"icon,omitempty" bson:"icon,omitempty"`
}

func (x *Spark) Reset() {
	*x = Spark{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_domain_module_api_v1_model_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Spark) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Spark) ProtoMessage() {}

func (x *Spark) ProtoReflect() protoreflect.Message {
	mi := &file_internal_domain_module_api_v1_model_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Spark.ProtoReflect.Descriptor instead.
func (*Spark) Descriptor() ([]byte, []int) {
	return file_internal_domain_module_api_v1_model_proto_rawDescGZIP(), []int{4}
}

func (x *Spark) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Spark) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Spark) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Spark) GetConfig() *structpb.Struct {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *Spark) GetExtensibleInputs() bool {
	if x != nil {
		return x.ExtensibleInputs
	}
	return false
}

func (x *Spark) GetInputs() map[string]*SparkInput {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *Spark) GetOutputs() map[string]*SparkOutput {
	if x != nil {
		return x.Outputs
	}
	return nil
}

func (x *Spark) GetReadme() string {
	if x != nil {
		return x.Readme
	}
	return ""
}

func (x *Spark) GetIcon() *Image {
	if x != nil {
		return x.Icon
	}
	return nil
}

type Connector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" bson:"name"`
	Label       string            `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty" bson:"label" yaml:"label"`
	Description string            `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty" bson:"description" yaml:"description"`
	Config      *structpb.Struct  `protobuf:"bytes,4,opt,name=config,proto3" json:"config,omitempty" bson:"config,omitempty" yaml:"config"`
	Readme      string            `protobuf:"bytes,5,opt,name=readme,proto3" json:"readme,omitempty" bson:"readme,omitempty"`
	Ui          *ConnectorUI      `protobuf:"bytes,6,opt,name=ui,proto3" json:"ui,omitempty" bson:"ui"`
	Icon        *Image            `protobuf:"bytes,7,opt,name=icon,proto3" json:"icon,omitempty" bson:"icon,omitempty"`
	Ingress     *ConnectorIngress `protobuf:"bytes,8,opt,name=ingress,proto3" json:"ingress,omitempty" bson:"ingress"`
}

func (x *Connector) Reset() {
	*x = Connector{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_domain_module_api_v1_model_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Connector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Connector) ProtoMessage() {}

func (x *Connector) ProtoReflect() protoreflect.Message {
	mi := &file_internal_domain_module_api_v1_model_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Connector.ProtoReflect.Descriptor instead.
func (*Connector) Descriptor() ([]byte, []int) {
	return file_internal_domain_module_api_v1_model_proto_rawDescGZIP(), []int{5}
}

func (x *Connector) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Connector) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *Connector) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Connector) GetConfig() *structpb.Struct {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *Connector) GetReadme() string {
	if x != nil {
		return x.Readme
	}
	return ""
}

func (x *Connector) GetUi() *ConnectorUI {
	if x != nil {
		return x.Ui
	}
	return nil
}

func (x *Connector) GetIcon() *Image {
	if x != nil {
		return x.Icon
	}
	return nil
}

func (x *Connector) GetIngress() *ConnectorIngress {
	if x != nil {
		return x.Ingress
	}
	return nil
}

type ConnectorIngress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled bool   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty" bson:"enabled"`
	Type    string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty" bson:"type"`
	Port    uint32 `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty" bson:"port"`
}

func (x *ConnectorIngress) Reset() {
	*x = ConnectorIngress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_domain_module_api_v1_model_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectorIngress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectorIngress) ProtoMessage() {}

func (x *ConnectorIngress) ProtoReflect() protoreflect.Message {
	mi := &file_internal_domain_module_api_v1_model_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectorIngress.ProtoReflect.Descriptor instead.
func (*ConnectorIngress) Descriptor() ([]byte, []int) {
	return file_internal_domain_module_api_v1_model_proto_rawDescGZIP(), []int{6}
}

func (x *ConnectorIngress) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *ConnectorIngress) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ConnectorIngress) GetPort() uint32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type ConnectorUI struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ConnectorUI) Reset() {
	*x = ConnectorUI{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_domain_module_api_v1_model_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectorUI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectorUI) ProtoMessage() {}

func (x *ConnectorUI) ProtoReflect() protoreflect.Message {
	mi := &file_internal_domain_module_api_v1_model_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectorUI.ProtoReflect.Descriptor instead.
func (*ConnectorUI) Descriptor() ([]byte, []int) {
	return file_internal_domain_module_api_v1_model_proto_rawDescGZIP(), []int{7}
}

type Action struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Module     *Module      `protobuf:"bytes,1,opt,name=module,proto3" json:"module,omitempty"`
	Sparks     []*Spark     `protobuf:"bytes,2,rep,name=sparks,proto3" json:"sparks,omitempty"`
	Connectors []*Connector `protobuf:"bytes,3,rep,name=connectors,proto3" json:"connectors,omitempty"`
}

func (x *Action) Reset() {
	*x = Action{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_domain_module_api_v1_model_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

func (x *Action) ProtoReflect() protoreflect.Message {
	mi := &file_internal_domain_module_api_v1_model_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action.ProtoReflect.Descriptor instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_internal_domain_module_api_v1_model_proto_rawDescGZIP(), []int{8}
}

func (x *Action) GetModule() *Module {
	if x != nil {
		return x.Module
	}
	return nil
}

func (x *Action) GetSparks() []*Spark {
	if x != nil {
		return x.Sparks
	}
	return nil
}

func (x *Action) GetConnectors() []*Connector {
	if x != nil {
		return x.Connectors
	}
	return nil
}

type DetailEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" bson:"_id"`
	CreatedAt        *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty" bson:"created_at"`
	UpdatedAt        *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty" bson:"updated_at"`
	AggregateVersion uint32                 `protobuf:"varint,4,opt,name=aggregate_version,json=aggregateVersion,proto3" json:"aggregate_version,omitempty" bson:"aggregate_version"`
	Module           *Module                `protobuf:"bytes,5,opt,name=module,proto3" json:"module,omitempty" bson:"module"`
	Sparks           []*Spark               `protobuf:"bytes,6,rep,name=sparks,proto3" json:"sparks,omitempty" bson:"sparks"`
	Connectors       []*Connector           `protobuf:"bytes,7,rep,name=connectors,proto3" json:"connectors,omitempty" bson:"connectors"`
}

func (x *DetailEntity) Reset() {
	*x = DetailEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_domain_module_api_v1_model_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailEntity) ProtoMessage() {}

func (x *DetailEntity) ProtoReflect() protoreflect.Message {
	mi := &file_internal_domain_module_api_v1_model_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailEntity.ProtoReflect.Descriptor instead.
func (*DetailEntity) Descriptor() ([]byte, []int) {
	return file_internal_domain_module_api_v1_model_proto_rawDescGZIP(), []int{9}
}

func (x *DetailEntity) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DetailEntity) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *DetailEntity) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *DetailEntity) GetAggregateVersion() uint32 {
	if x != nil {
		return x.AggregateVersion
	}
	return 0
}

func (x *DetailEntity) GetModule() *Module {
	if x != nil {
		return x.Module
	}
	return nil
}

func (x *DetailEntity) GetSparks() []*Spark {
	if x != nil {
		return x.Sparks
	}
	return nil
}

func (x *DetailEntity) GetConnectors() []*Connector {
	if x != nil {
		return x.Connectors
	}
	return nil
}

type MasterEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" bson:"_id"`
	CreatedAt        *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty" bson:"created_at"`
	UpdatedAt        *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty" bson:"updated_at"`
	AggregateVersion uint32                 `protobuf:"varint,4,opt,name=aggregate_version,json=aggregateVersion,proto3" json:"aggregate_version,omitempty" bson:"aggregate_version"`
	Package          string                 `protobuf:"bytes,5,opt,name=package,proto3" json:"package,omitempty" bson:"package"`
	Version          string                 `protobuf:"bytes,6,opt,name=version,proto3" json:"version,omitempty" bson:"version"`
	Repo             string                 `protobuf:"bytes,7,opt,name=repo,proto3" json:"repo,omitempty" bson:"repo"`
	Label            string                 `protobuf:"bytes,8,opt,name=label,proto3" json:"label,omitempty" bson:"label"`
	Description      string                 `protobuf:"bytes,9,opt,name=description,proto3" json:"description,omitempty" bson:"description"`
	Icon             *Image                 `protobuf:"bytes,10,opt,name=icon,proto3" json:"icon,omitempty" bson:"icon"`
	Tags             []string               `protobuf:"bytes,11,rep,name=tags,proto3" json:"tags,omitempty" bson:"tags"`
	Sparks           uint32                 `protobuf:"varint,12,opt,name=sparks,proto3" json:"sparks,omitempty" bson:"sparks"`
	Connectors       uint32                 `protobuf:"varint,13,opt,name=connectors,proto3" json:"connectors,omitempty" bson:"connectors"`
}

func (x *MasterEntity) Reset() {
	*x = MasterEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_domain_module_api_v1_model_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MasterEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MasterEntity) ProtoMessage() {}

func (x *MasterEntity) ProtoReflect() protoreflect.Message {
	mi := &file_internal_domain_module_api_v1_model_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MasterEntity.ProtoReflect.Descriptor instead.
func (*MasterEntity) Descriptor() ([]byte, []int) {
	return file_internal_domain_module_api_v1_model_proto_rawDescGZIP(), []int{10}
}

func (x *MasterEntity) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MasterEntity) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *MasterEntity) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *MasterEntity) GetAggregateVersion() uint32 {
	if x != nil {
		return x.AggregateVersion
	}
	return 0
}

func (x *MasterEntity) GetPackage() string {
	if x != nil {
		return x.Package
	}
	return ""
}

func (x *MasterEntity) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *MasterEntity) GetRepo() string {
	if x != nil {
		return x.Repo
	}
	return ""
}

func (x *MasterEntity) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *MasterEntity) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MasterEntity) GetIcon() *Image {
	if x != nil {
		return x.Icon
	}
	return nil
}

func (x *MasterEntity) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *MasterEntity) GetSparks() uint32 {
	if x != nil {
		return x.Sparks
	}
	return 0
}

func (x *MasterEntity) GetConnectors() uint32 {
	if x != nil {
		return x.Connectors
	}
	return 0
}

type ShortEntity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" bson:"_id"`
	AggregateVersion uint32 `protobuf:"varint,2,opt,name=aggregate_version,json=aggregateVersion,proto3" json:"aggregate_version,omitempty" bson:"aggregate_version"`
	Package          string `protobuf:"bytes,3,opt,name=package,proto3" json:"package,omitempty" bson:"package"`
	Label            string `protobuf:"bytes,4,opt,name=label,proto3" json:"label,omitempty" bson:"label"`
	Description      string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty" bson:"description"`
}

func (x *ShortEntity) Reset() {
	*x = ShortEntity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_domain_module_api_v1_model_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShortEntity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortEntity) ProtoMessage() {}

func (x *ShortEntity) ProtoReflect() protoreflect.Message {
	mi := &file_internal_domain_module_api_v1_model_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortEntity.ProtoReflect.Descriptor instead.
func (*ShortEntity) Descriptor() ([]byte, []int) {
	return file_internal_domain_module_api_v1_model_proto_rawDescGZIP(), []int{11}
}

func (x *ShortEntity) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ShortEntity) GetAggregateVersion() uint32 {
	if x != nil {
		return x.AggregateVersion
	}
	return 0
}

func (x *ShortEntity) GetPackage() string {
	if x != nil {
		return x.Package
	}
	return ""
}

func (x *ShortEntity) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *ShortEntity) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

var File_internal_domain_module_api_v1_model_proto protoreflect.FileDescriptor

var file_internal_domain_module_api_v1_model_proto_rawDesc = []byte{
	0x0a, 0x29, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x5f, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x43,
	0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2f, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6d, 0x73, 0x6f, 0x6b, 0x6f, 0x6c, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x67, 0x6f, 0x74, 0x61, 0x67, 0x2f,
	0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2f, 0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x79, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x4a, 0x0a, 0x08,
	0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18,
	0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x45, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x42, 0x14, 0x9a, 0x84, 0x9e, 0x03, 0x0f, 0x62,
	0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x22, 0x52, 0x08,
	0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x24, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0x9a, 0x84, 0x9e, 0x03, 0x0b, 0x62, 0x73, 0x6f,
	0x6e, 0x3a, 0x22, 0x64, 0x61, 0x74, 0x61, 0x22, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd2,
	0x04, 0x0a, 0x06, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x43, 0x0a, 0x07, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x29, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x9a, 0x84, 0x9e, 0x03, 0x1d, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x22, 0x20, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x22, 0x52, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x49,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x2f, 0xfa, 0x42, 0x19, 0x72, 0x17, 0x32, 0x15, 0x76, 0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x2b, 0x2e,
	0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x2b, 0x2e, 0x5b, 0x30, 0x2d, 0x39, 0x5d, 0x2b, 0x9a, 0x84, 0x9e,
	0x03, 0x0e, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x04, 0x72, 0x65, 0x70,
	0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x9a, 0x84, 0x9e, 0x03, 0x0b, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x72, 0x65, 0x70, 0x6f, 0x22,
	0x52, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x12, 0x3b, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x25, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x9a, 0x84,
	0x9e, 0x03, 0x19, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x20,
	0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x52, 0x05, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x12, 0x53, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x31, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x9a, 0x84, 0x9e, 0x03, 0x25, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x20, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x42, 0x34, 0xfa, 0x42, 0x0b, 0x92, 0x01, 0x08, 0x18, 0x01,
	0x22, 0x04, 0x72, 0x02, 0x10, 0x01, 0x9a, 0x84, 0x9e, 0x03, 0x21, 0x62, 0x73, 0x6f, 0x6e, 0x3a,
	0x22, 0x74, 0x61, 0x67, 0x73, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x20, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x74, 0x61, 0x67, 0x73, 0x22, 0x52, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x12, 0x34, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x64, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x1c, 0x9a, 0x84, 0x9e, 0x03, 0x17, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x72,
	0x65, 0x61, 0x64, 0x6d, 0x65, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x52, 0x06, 0x72, 0x65, 0x61, 0x64, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x6c, 0x69, 0x63, 0x65,
	0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0x9a, 0x84, 0x9e, 0x03, 0x18,
	0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x63, 0x65, 0x2c, 0x6f, 0x6d,
	0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x63,
	0x65, 0x12, 0x40, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x42, 0x1a, 0x9a, 0x84, 0x9e, 0x03, 0x15, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x69, 0x63,
	0x6f, 0x6e, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x04, 0x69,
	0x63, 0x6f, 0x6e, 0x22, 0x99, 0x02, 0x0a, 0x0a, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x12, 0x57, 0x0a, 0x0a, 0x6d, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x38, 0xfa, 0x42, 0x0d, 0x92, 0x01, 0x0a, 0x08, 0x01,
	0x18, 0x01, 0x22, 0x04, 0x72, 0x02, 0x10, 0x01, 0x9a, 0x84, 0x9e, 0x03, 0x23, 0x62, 0x73, 0x6f,
	0x6e, 0x3a, 0x22, 0x6d, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x22, 0x20, 0x79,
	0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x6d, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x22,
	0x52, 0x09, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x06, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x12, 0x9a, 0x84, 0x9e,
	0x03, 0x0d, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x22, 0x52,
	0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x3a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x42, 0x1e, 0x9a, 0x84, 0x9e, 0x03, 0x19,
	0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x2c, 0x6f,
	0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x12, 0x4a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x36, 0xfa, 0x42, 0x23, 0x72, 0x21, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x62, 0x6f, 0x6f, 0x6c, 0x65, 0x61,
	0x6e, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x9a, 0x84, 0x9e, 0x03, 0x0b, 0x62, 0x73,
	0x6f, 0x6e, 0x3a, 0x22, 0x74, 0x79, 0x70, 0x65, 0x22, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22,
	0x90, 0x01, 0x0a, 0x0b, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12,
	0x4b, 0x0a, 0x09, 0x6d, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x2e, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x9a, 0x84, 0x9e, 0x03, 0x22,
	0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x6d, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22,
	0x20, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x6d, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x22, 0x20, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x06,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1c, 0x9a, 0x84,
	0x9e, 0x03, 0x17, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2c,
	0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x22, 0xf6, 0x06, 0x0a, 0x05, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x12, 0x24, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0x9a, 0x84, 0x9e, 0x03,
	0x0b, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x26, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x9a, 0x84, 0x9e, 0x03, 0x1a, 0x62,
	0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x20, 0x79, 0x61, 0x6d, 0x6c,
	0x3a, 0x22, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x20, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x12, 0x54, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x32, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x9a, 0x84,
	0x9e, 0x03, 0x26, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x20, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x20, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5b, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x42,
	0x2a, 0x9a, 0x84, 0x9e, 0x03, 0x25, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x79, 0x61,
	0x6d, 0x6c, 0x3a, 0x22, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x52, 0x06, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x6d, 0x0a, 0x11, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x62, 0x6c,
	0x65, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x42, 0x40,
	0x9a, 0x84, 0x9e, 0x03, 0x3b, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x2c, 0x6f, 0x6d, 0x69,
	0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x65, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x22,
	0x52, 0x10, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x73, 0x12, 0x61, 0x0a, 0x06, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x76, 0x31, 0x2e, 0x53,
	0x70, 0x61, 0x72, 0x6b, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x42, 0x2b, 0x9a, 0x84, 0x9e, 0x03, 0x26, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x69, 0x6e, 0x70,
	0x75, 0x74, 0x73, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x79,
	0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x22, 0x20, 0x52, 0x06, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x73, 0x12, 0x66, 0x0a, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f,
	0x76, 0x31, 0x2e, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x42, 0x2d, 0x9a, 0x84, 0x9e, 0x03, 0x28, 0x62, 0x73, 0x6f, 0x6e,
	0x3a, 0x22, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x20, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x6f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x73, 0x22, 0x20, 0x52, 0x07, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x73, 0x12, 0x34, 0x0a,
	0x06, 0x72, 0x65, 0x61, 0x64, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1c, 0x9a,
	0x84, 0x9e, 0x03, 0x17, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x72, 0x65, 0x61, 0x64, 0x6d, 0x65,
	0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x06, 0x72, 0x65, 0x61,
	0x64, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x76, 0x31, 0x2e, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x42, 0x1a, 0x9a, 0x84, 0x9e, 0x03, 0x15, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22,
	0x69, 0x63, 0x6f, 0x6e, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x1a, 0x50, 0x0a, 0x0b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x76,
	0x31, 0x2e, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x52, 0x0a, 0x0c, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x5f, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x9d, 0x04, 0x0a, 0x09,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0x9a, 0x84, 0x9e, 0x03, 0x0b, 0x62, 0x73,
	0x6f, 0x6e, 0x3a, 0x22, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x3c, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x26,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x9a, 0x84, 0x9e, 0x03, 0x1a, 0x62, 0x73, 0x6f, 0x6e,
	0x3a, 0x22, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x20, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x22, 0x20, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x53, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x31, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x9a, 0x84, 0x9e, 0x03, 0x25,
	0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x20, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x5b, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x42, 0x2a, 0x9a, 0x84, 0x9e,
	0x03, 0x25, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2c, 0x6f,
	0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x20, 0x79, 0x61, 0x6d, 0x6c, 0x3a, 0x22,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x34, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x64, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x1c, 0x9a, 0x84, 0x9e, 0x03, 0x17, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x72, 0x65, 0x61, 0x64,
	0x6d, 0x65, 0x2c, 0x6f, 0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x06, 0x72,
	0x65, 0x61, 0x64, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x02, 0x75, 0x69, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x55, 0x49, 0x42, 0x0e, 0x9a, 0x84, 0x9e, 0x03, 0x09,
	0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x75, 0x69, 0x22, 0x52, 0x02, 0x75, 0x69, 0x12, 0x40, 0x0a,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x6f,
	0x64, 0x75, 0x6c, 0x65, 0x5f, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x42, 0x1a, 0x9a,
	0x84, 0x9e, 0x03, 0x15, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x69, 0x63, 0x6f, 0x6e, 0x2c, 0x6f,
	0x6d, 0x69, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12,
	0x4a, 0x0a, 0x07, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x42, 0x13, 0x9a,
	0x84, 0x9e, 0x03, 0x0e, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x22, 0x52, 0x07, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x22, 0x98, 0x01, 0x0a, 0x10,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x2d, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x42, 0x13, 0x9a, 0x84, 0x9e, 0x03, 0x0e, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x2f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1b, 0xfa,
	0x42, 0x08, 0x72, 0x06, 0x52, 0x04, 0x68, 0x74, 0x74, 0x70, 0x9a, 0x84, 0x9e, 0x03, 0x0b, 0x62,
	0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x74, 0x79, 0x70, 0x65, 0x22, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x24, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x10,
	0x9a, 0x84, 0x9e, 0x03, 0x0b, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x70, 0x6f, 0x72, 0x74, 0x22,
	0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x0d, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x55, 0x49, 0x22, 0x9d, 0x01, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x33, 0x0a, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x06, 0x6d,
	0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x73, 0x70, 0x61, 0x72, 0x6b, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x76,
	0x31, 0x2e, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x52, 0x06, 0x73, 0x70, 0x61, 0x72, 0x6b, 0x73, 0x12,
	0x34, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x73, 0x22, 0xec, 0x03, 0x0a, 0x0c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0f, 0x9a, 0x84, 0x9e, 0x03, 0x0a, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x5f,
	0x69, 0x64, 0x22, 0x52, 0x02, 0x69, 0x64, 0x12, 0x51, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x16, 0x9a, 0x84, 0x9e, 0x03, 0x11, 0x62, 0x73,
	0x6f, 0x6e, 0x3a, 0x22, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x22, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x51, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x16, 0x9a, 0x84, 0x9e, 0x03,
	0x11, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x22, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x4a, 0x0a,
	0x11, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x1d, 0x9a, 0x84, 0x9e, 0x03, 0x18, 0x62,
	0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x52, 0x10, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a, 0x06, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x6f, 0x64, 0x75,
	0x6c, 0x65, 0x5f, 0x76, 0x31, 0x2e, 0x4d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x42, 0x12, 0x9a, 0x84,
	0x9e, 0x03, 0x0d, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x22,
	0x52, 0x06, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x12, 0x3c, 0x0a, 0x06, 0x73, 0x70, 0x61, 0x72,
	0x6b, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c,
	0x65, 0x5f, 0x76, 0x31, 0x2e, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x42, 0x12, 0x9a, 0x84, 0x9e, 0x03,
	0x0d, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x73, 0x70, 0x61, 0x72, 0x6b, 0x73, 0x22, 0x52, 0x06,
	0x73, 0x70, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x4c, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6f, 0x64,
	0x75, 0x6c, 0x65, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x42, 0x16, 0x9a, 0x84, 0x9e, 0x03, 0x11, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x22, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x73, 0x22, 0xcb, 0x05, 0x0a, 0x0c, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0f, 0x9a, 0x84, 0x9e, 0x03, 0x0a, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x5f, 0x69,
	0x64, 0x22, 0x52, 0x02, 0x69, 0x64, 0x12, 0x51, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x16, 0x9a, 0x84, 0x9e, 0x03, 0x11, 0x62, 0x73, 0x6f,
	0x6e, 0x3a, 0x22, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x22, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x51, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x16, 0x9a, 0x84, 0x9e, 0x03, 0x11,
	0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x22, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x4a, 0x0a, 0x11,
	0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x1d, 0x9a, 0x84, 0x9e, 0x03, 0x18, 0x62, 0x73,
	0x6f, 0x6e, 0x3a, 0x22, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x52, 0x10, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74,
	0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0x9a, 0x84, 0x9e, 0x03, 0x0e,
	0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x22, 0x52, 0x07,
	0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x2d, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0x9a, 0x84, 0x9e, 0x03, 0x0e, 0x62,
	0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0x9a, 0x84, 0x9e, 0x03, 0x0b, 0x62, 0x73, 0x6f, 0x6e, 0x3a,
	0x22, 0x72, 0x65, 0x70, 0x6f, 0x22, 0x52, 0x04, 0x72, 0x65, 0x70, 0x6f, 0x12, 0x27, 0x0a, 0x05,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x9a, 0x84, 0x9e,
	0x03, 0x0c, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x52, 0x05,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x39, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0x9a, 0x84, 0x9e, 0x03,
	0x12, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x36, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x76, 0x31, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x42, 0x10, 0x9a, 0x84, 0x9e, 0x03, 0x0b, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x69, 0x63, 0x6f,
	0x6e, 0x22, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x42, 0x10, 0x9a, 0x84, 0x9e, 0x03, 0x0b, 0x62, 0x73, 0x6f,
	0x6e, 0x3a, 0x22, 0x74, 0x61, 0x67, 0x73, 0x22, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x2a,
	0x0a, 0x06, 0x73, 0x70, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x12,
	0x9a, 0x84, 0x9e, 0x03, 0x0d, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x73, 0x70, 0x61, 0x72, 0x6b,
	0x73, 0x22, 0x52, 0x06, 0x73, 0x70, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x36, 0x0a, 0x0a, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x16,
	0x9a, 0x84, 0x9e, 0x03, 0x11, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x73, 0x22, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x73, 0x22, 0x8d, 0x02, 0x0a, 0x0b, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x1f, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0f,
	0x9a, 0x84, 0x9e, 0x03, 0x0a, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x5f, 0x69, 0x64, 0x22, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x4a, 0x0a, 0x11, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x1d,
	0x9a, 0x84, 0x9e, 0x03, 0x18, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x61, 0x67, 0x67, 0x72, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x52, 0x10, 0x61,
	0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x2d, 0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x13, 0x9a, 0x84, 0x9e, 0x03, 0x0e, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x22, 0x52, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x27,
	0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x9a,
	0x84, 0x9e, 0x03, 0x0c, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22,
	0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x39, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0x9a, 0x84,
	0x9e, 0x03, 0x12, 0x62, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x2a, 0x3d, 0x0a, 0x0d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x63, 0x6f, 0x64,
	0x69, 0x6e, 0x67, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x0a, 0x0a,
	0x06, 0x42, 0x36, 0x34, 0x50, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x42, 0x36, 0x34,
	0x4a, 0x50, 0x47, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x42, 0x36, 0x34, 0x53, 0x56, 0x47, 0x10,
	0x03, 0x42, 0x48, 0x5a, 0x46, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x61, 0x7a, 0x61, 0x72, 0x63, 0x2d, 0x69, 0x6f, 0x2f, 0x76, 0x65, 0x72, 0x61, 0x74, 0x68, 0x72,
	0x65, 0x61, 0x64, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x2f, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x3b, 0x6d, 0x6f, 0x64, 0x75, 0x6c, 0x65, 0x5f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_internal_domain_module_api_v1_model_proto_rawDescOnce sync.Once
	file_internal_domain_module_api_v1_model_proto_rawDescData = file_internal_domain_module_api_v1_model_proto_rawDesc
)

func file_internal_domain_module_api_v1_model_proto_rawDescGZIP() []byte {
	file_internal_domain_module_api_v1_model_proto_rawDescOnce.Do(func() {
		file_internal_domain_module_api_v1_model_proto_rawDescData = protoimpl.X.CompressGZIP(file_internal_domain_module_api_v1_model_proto_rawDescData)
	})
	return file_internal_domain_module_api_v1_model_proto_rawDescData
}

var file_internal_domain_module_api_v1_model_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_internal_domain_module_api_v1_model_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_internal_domain_module_api_v1_model_proto_goTypes = []interface{}{
	(ImageEncoding)(0),            // 0: module_v1.ImageEncoding
	(*Image)(nil),                 // 1: module_v1.Image
	(*Module)(nil),                // 2: module_v1.Module
	(*SparkInput)(nil),            // 3: module_v1.SparkInput
	(*SparkOutput)(nil),           // 4: module_v1.SparkOutput
	(*Spark)(nil),                 // 5: module_v1.Spark
	(*Connector)(nil),             // 6: module_v1.Connector
	(*ConnectorIngress)(nil),      // 7: module_v1.ConnectorIngress
	(*ConnectorUI)(nil),           // 8: module_v1.ConnectorUI
	(*Action)(nil),                // 9: module_v1.Action
	(*DetailEntity)(nil),          // 10: module_v1.DetailEntity
	(*MasterEntity)(nil),          // 11: module_v1.MasterEntity
	(*ShortEntity)(nil),           // 12: module_v1.ShortEntity
	nil,                           // 13: module_v1.Spark.InputsEntry
	nil,                           // 14: module_v1.Spark.OutputsEntry
	(*structpb.Struct)(nil),       // 15: google.protobuf.Struct
	(*timestamppb.Timestamp)(nil), // 16: google.protobuf.Timestamp
}
var file_internal_domain_module_api_v1_model_proto_depIdxs = []int32{
	0,  // 0: module_v1.Image.encoding:type_name -> module_v1.ImageEncoding
	1,  // 1: module_v1.Module.icon:type_name -> module_v1.Image
	15, // 2: module_v1.Spark.config:type_name -> google.protobuf.Struct
	13, // 3: module_v1.Spark.inputs:type_name -> module_v1.Spark.InputsEntry
	14, // 4: module_v1.Spark.outputs:type_name -> module_v1.Spark.OutputsEntry
	1,  // 5: module_v1.Spark.icon:type_name -> module_v1.Image
	15, // 6: module_v1.Connector.config:type_name -> google.protobuf.Struct
	8,  // 7: module_v1.Connector.ui:type_name -> module_v1.ConnectorUI
	1,  // 8: module_v1.Connector.icon:type_name -> module_v1.Image
	7,  // 9: module_v1.Connector.ingress:type_name -> module_v1.ConnectorIngress
	2,  // 10: module_v1.Action.module:type_name -> module_v1.Module
	5,  // 11: module_v1.Action.sparks:type_name -> module_v1.Spark
	6,  // 12: module_v1.Action.connectors:type_name -> module_v1.Connector
	16, // 13: module_v1.DetailEntity.created_at:type_name -> google.protobuf.Timestamp
	16, // 14: module_v1.DetailEntity.updated_at:type_name -> google.protobuf.Timestamp
	2,  // 15: module_v1.DetailEntity.module:type_name -> module_v1.Module
	5,  // 16: module_v1.DetailEntity.sparks:type_name -> module_v1.Spark
	6,  // 17: module_v1.DetailEntity.connectors:type_name -> module_v1.Connector
	16, // 18: module_v1.MasterEntity.created_at:type_name -> google.protobuf.Timestamp
	16, // 19: module_v1.MasterEntity.updated_at:type_name -> google.protobuf.Timestamp
	1,  // 20: module_v1.MasterEntity.icon:type_name -> module_v1.Image
	3,  // 21: module_v1.Spark.InputsEntry.value:type_name -> module_v1.SparkInput
	4,  // 22: module_v1.Spark.OutputsEntry.value:type_name -> module_v1.SparkOutput
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_internal_domain_module_api_v1_model_proto_init() }
func file_internal_domain_module_api_v1_model_proto_init() {
	if File_internal_domain_module_api_v1_model_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_internal_domain_module_api_v1_model_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Image); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_domain_module_api_v1_model_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Module); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_domain_module_api_v1_model_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SparkInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_domain_module_api_v1_model_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SparkOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_domain_module_api_v1_model_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Spark); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_domain_module_api_v1_model_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Connector); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_domain_module_api_v1_model_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectorIngress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_domain_module_api_v1_model_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectorUI); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_domain_module_api_v1_model_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_domain_module_api_v1_model_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetailEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_domain_module_api_v1_model_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MasterEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_domain_module_api_v1_model_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShortEntity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_internal_domain_module_api_v1_model_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_internal_domain_module_api_v1_model_proto_goTypes,
		DependencyIndexes: file_internal_domain_module_api_v1_model_proto_depIdxs,
		EnumInfos:         file_internal_domain_module_api_v1_model_proto_enumTypes,
		MessageInfos:      file_internal_domain_module_api_v1_model_proto_msgTypes,
	}.Build()
	File_internal_domain_module_api_v1_model_proto = out.File
	file_internal_domain_module_api_v1_model_proto_rawDesc = nil
	file_internal_domain_module_api_v1_model_proto_goTypes = nil
	file_internal_domain_module_api_v1_model_proto_depIdxs = nil
}
